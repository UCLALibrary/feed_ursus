name: Run CI Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DEFAULT_PYTHON_VERSION: 3.11

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}
      - run: pip install black
      - run: black --check .

  pytest:
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    runs-on: ubuntu-latest
    env:
      SOLR_URL: http://127.0.0.1:8983/solr/californica
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - run: docker-compose up --detach solr
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --only main,test
      - run: poetry run pytest

  tag-release:
    needs: [pytest]
    runs-on: ubuntu-latest
    env:
      BUMP_LEVEL:
    steps:
    - if: ${{ !env.BUMP_LEVEL && (contains(github.event.pull_request.title, '#norelease') || contains(github.event.pull_request.body, '#norelease') || contains(github.event.head_commit.message, '#norelease')) }}
      run: echo "BUMP_LEVEL=#norelease" >> $GITHUB_ENV
    - if: contains(github.event.pull_request.title, '#patch') || contains(github.event.pull_request.body, '#patch') || contains(github.event.head_commit.message, '#patch')
      run: echo "BUMP_LEVEL=patch" >> $GITHUB_ENV
    - if: contains(github.event.pull_request.title, '#minor') || contains(github.event.pull_request.body, '#minor') || contains(github.event.head_commit.message, '#minor')
      run: echo "BUMP_LEVEL=minor" >> $GITHUB_ENV
    - if: contains(github.event.pull_request.title, '#major') || contains(github.event.pull_request.body, '#major') || contains(github.event.head_commit.message, '#major')
      run: echo "BUMP_LEVEL=major" >> $GITHUB_ENV

    - uses: phish108/autotag-action@v1.1.55
      if: ${{ env.BUMP_LEVEL && env.BUMP_LEVEL != '#norelease' }}
      with:
        dry-run: ${{ github.ref != 'refs/heads/main' || github.event_name == 'pull_request' }}
        with-v: true
        bump: ${{ env.BUMP_LEVEL }}
      #   github-token: ${{ secrets.GITHUB_TOKEN}}

    - if: ${{!env.BUMP_LEVEL && github.event_name == 'pull_request'}}
      run: |
        echo "PR title or body must contain one of '#major', '#minor', '#patch', or '#norelease'."
        exit 1
